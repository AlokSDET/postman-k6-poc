// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";
import "./libs/shim/urijs.js";

export let options = { maxRedirects: 4 };

const file = (() => {
  // Load data file
  const text = open("./data.json");
  const rows = JSON.parse(text);
  return rows;
})();
options.iterations = file.length;

const Iteration = Symbol.for("iteration");
const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    base_url: "https://jsonplaceholder.typicode.com/"
  },
  data: file
});

export default function() {
  postman[Iteration]();

  postman[Request]({
    name: "https://jsonplaceholder.typicode.com/comments?postId=1",
    id: "17e75c30-3dfe-4986-b061-20da6274b2e4",
    method: "GET",
    address: "{{base_url}}/comments?postId={{post_id}}",
    pre() {
      let API = data.Apis[0];
      pm.globals.set("request_url", API.RequestUrl);
      pm.globals.set("post_id", API.PostId);
    },
    post(response) {
      pm.test("Successful POST request", function() {
        pm.expect(pm.response.code).to.be.oneOf([200, 201]);
      });

      let post_id = parseInt(pm.globals.get("post_id"));
      var responseBody = pm.response.json();
      pm.test(
        `Check if each JSON object has postId equal to ${post_id}`,
        function() {
          responseBody.forEach(function(item) {
            pm.expect(item.postId).to.eql(post_id);
          });
        }
      );
    }
  });
}


import { htmlReport } from "https://raw.githubusercontent.com/benc-uk/k6-reporter/main/dist/bundle.js";
import { textSummary } from "https://jslib.k6.io/k6-summary/0.0.1/index.js";

export function handleSummary(data) {
  return {
    "reports/k6_test_coll.postman_collection.html": htmlReport(data),
    stdout: textSummary(data, { indent: " ", enableColors: true }),
  };
}