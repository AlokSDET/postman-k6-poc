// Auto-generated by the Load Impact converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";
import "./libs/shim/urijs.js";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    base_url: "https://sisclientweb-900149.campusnexus.dev"
  }
});

export default function() {
  postman[Request]({
    name: "Get Crocodiles",
    id: "d92d581d-304b-4b4d-9162-376d1ac6166d",
    method: "GET",
    address: "{{BASE_URL}}/public/crocodiles/",
    post(response) {
      pm.test("Response status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Response has the required fields", function() {
        const responseData = pm.response.json();

        pm.expect(responseData).to.be.an("array");
        responseData.forEach(crocodile => {
          pm.expect(crocodile).to.have.property("id");
          pm.expect(crocodile).to.have.property("name");
          pm.expect(crocodile).to.have.property("sex");
          pm.expect(crocodile).to.have.property("date_of_birth");
          pm.expect(crocodile).to.have.property("age");
        });
      });

      pm.test("Date of birth is in a valid date format", function() {
        const responseData = pm.response.json();

        pm.expect(responseData).to.be.an("array");
        responseData.forEach(function(crocodile) {
          pm.expect(crocodile.date_of_birth).to.match(/^\d{4}-\d{2}-\d{2}$/);
        });
      });

      pm.test("Age is a non-negative integer", function() {
        const responseData = pm.response.json();

        pm.expect(responseData).to.be.an("array");
        responseData.forEach(function(crocodile) {
          pm.expect(crocodile.age)
            .to.be.a("number")
            .and.to.satisfy(
              age => age >= 0,
              "Age should be a non-negative integer"
            );
        });
      });

      pm.test("Content type is application/json", function() {
        pm.expect(pm.response.headers.get("Content-Type")).to.include(
          "application/json"
        );
      });
    }
  });

  postman[Request]({
    name: "Get Crocodile 1",
    id: "1b053c11-aad4-4bc7-921b-f633401d25bf",
    method: "GET",
    address: "https://test-api.k6.io/public/crocodiles/1/",
    post(response) {
      pm.test("Response status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test(
        "Response has the required fields - id, name, sex, date_of_birth, and age",
        function() {
          const responseData = pm.response.json();

          pm.expect(responseData).to.be.an("object");
          pm.expect(responseData).to.have.property("id");
          pm.expect(responseData).to.have.property("name");
          pm.expect(responseData).to.have.property("sex");
          pm.expect(responseData).to.have.property("date_of_birth");
          pm.expect(responseData).to.have.property("age");
        }
      );

      pm.test("Name is a non-empty string", function() {
        const responseData = pm.response.json();

        pm.expect(responseData).to.be.an("object");
        pm.expect(responseData.name)
          .to.be.a("string")
          .and.to.have.lengthOf.at.least(1, "Name should not be empty");
      });

      pm.test("Date of birth is in a valid date format", function() {
        const responseData = pm.response.json();

        pm.expect(responseData).to.be.an("object");
        pm.expect(responseData.date_of_birth).to.match(/^\d{4}-\d{2}-\d{2}$/);
      });

      pm.test("Age is a non-negative integer", function() {
        const responseData = pm.response.json();

        pm.expect(responseData).to.be.an("object");
        pm.expect(responseData.age).to.be.a("number");
        pm.expect(responseData.age).to.satisfy(
          age => age >= 0,
          "Age should be a non-negative integer"
        );
      });
    }
  });
}


import { htmlReport } from "https://raw.githubusercontent.com/benc-uk/k6-reporter/main/dist/bundle.js";
import { textSummary } from "https://jslib.k6.io/k6-summary/0.0.1/index.js";

export function handleSummary(data) {
  return {
    "reports/k6_Performance_Testing.postman_collection.html": htmlReport(data),
    stdout: textSummary(data, { indent: " ", enableColors: true }),
  };
}